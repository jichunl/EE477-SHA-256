####################################################################################
# IC Compiler Hierarchical Reference Methodology Release Notes
# Version: G-2012.06-SP4 (January 11, 2013)
# Copyright (C) 2007-2013 Synopsys All rights reserved.
####################################################################################

G-2012.06-SP4
=============

This section describes new features, changes, and enhancements in the
IC Compiler Hierarchical Reference Methodology version G-2012.06-SP4.

*  The select_mim_master_instance command is moved to run before 
   the create_on_demand_netlist command if you select ODL for the 
   Hierarchical FLow Style option in RMgen.

This release also provides enhancements in the Lynx-Compatible reference 
methodology flow. For information about these enhancements, see the file 
named Release_Notes.LynxCompatible-RM.txt.


G-2012.06
=========

This section describes new features, changes, and enhancements in the
IC Compiler Hierarchical Reference Methodology version G-2012.06.

*  Support has been added for block abstractions.

   The ICC_CREATE_BLOCK_ABSTRACTION variable has been added to icc_setup.tcl. 
   Use this variable to control which command is used at the end of block 
   implementation in outputs_icc.tcl: create_block_abstraction (TRUE), which 
   generates a block abstraction, or create_ilm (FALSE), which generates an 
   interface logic model (ILM). The default is create_block_abstraction.

*  Support has been added for top-level optimization using block abstractions.

   When you run the IC Compiler Hierarchical Reference Methodology, it uses the 
   IC Compiler Reference Methodology for top-level implementation. Transparent 
   interface optimization (TIO) support has been added to the route_opt command 
   for top-level implementation, which includes route_opt_icc.tcl, 
   chip_finish_icc.tcl, and focal_opt_icc.tcl. Transparent interface 
   optimization only works with block abstractions.

   The following new variables have been added in icc_setup.tcl to control 
   transparent interface optimization:

   set ICC_TIO_BLOCK_LIST ""    ;# a list; specify block reference  
                                   names for TIO to work on; 

                                ;# default is empty and will be auto set to all 
                                   blocks by prepare_block_dp task of HRM

   set ICC_TIO_HOST_OPTION_POOL_OPTION ""    
                                ;# lsf|grd; this controls the -pool option  
                                   for set_host_options"

   set ICC_TIO_HOST_OPTION_SUBMIT_OPTIONS {} 
                                ;# controls the value of -submit_option 
                                   option for set_host_options. If 
                                   ICC_TIO_HOST_OPTION_POOL_OPTION 
                                   is set to lsf, 

                                ;# then lsf specific submit options 
                                   should be specified, for example, 

                                ;# {-q bnormal 
                                   -R "rusage\[mem=12000\]\cputype==  
                                   emt64 cpuspeed==EMT3000 qsc==e"}

   set ICC_TIO_WRITE_ECO_FILE "FALSE"        
                                ;# TRUE|FALSE; set to TRUE to write out 
                                   an ECO file to TIO_eco_changes directory

   set ICC_TIO_OPTIMIZE_BLOCK_INTERFACE "TRUE" 
                                ;# TRUE|FALSE; set to TRUE to optimize 
                                   interface logic

   set ICC_TIO_OPTIMIZE_SHARED_LOGIC "FALSE"    
                                ;# TRUE|FALSE; set to TRUE to optimize 
                                   shared logic

   Because ICC_TIO_OPTIMIZE_BLOCK_INTERFACE is set to TRUE by default and 
   ICC_TIO_BLOCK_LIST is automatically set to all blocks at the prepare_block_dp 
   step, transparent interface optimization is 
   
   o  Enabled by default to work on all blocks for the route_opt command if 
      ICC_TIO_HOST_OPTION_POOL_OPTION and ICC_TIO_HOST_OPTION_SUBMIT_OPTIONS are 
      also specified as required by IC Compiler.

   o  Not performed if ICC_TIO_HOST_OPTION_POOL_OPTION and 
      ICC_TIO_HOST_OPTION_SUBMIT_OPTIONS are not specified, .

   When transparent interface optimization is enabled, the block CEL views specified 
   in ICC_TIO_BLOCK_LIST are automatically copied to the same design library in such 
   a way that transparent interface optimization can work on them.

   In addition, ICC_IMPLEMENTATION_PHASE is automatically set to top for the 
   top-level design if the IC Compiler Hierarchical Reference Methodology is used 
   in such a way that transparent interface optimization support is enabled. 
   (Transparent interface optimization works only at the top-level design when 
   ICC_IMPLEMENTATION_PHASE is set to top.)

*  ICC_ILM_LIBS has been renamed to ICC_SOFT_MACRO_LIBS because the scripts now 
   support both block abstractions and ILMs.  

   ICC_SKIPPED_IN_BLOCK_IMPLEMENTATION has been renamed to ICC_IMPLEMENTATION_PHASE.

   The descriptions in icc_setup.tcl have been updated.

*  The default hierarchical flow style has been changed from virtual flat to 
   on-demand loading.

   The default value for the Flow Style option in RMgen is now ODL. The value 
   for a virtual flat flow has been changed from DEFAULT to VIRTUAL_FLAT. All 
   the scripts have been updated.

*  The copy_mim and flip_mim comments have been updated for the multiply 
   instantiated modules flow in create_plangroups_dp.tcl.

   ## To copy cell placement, blockages, or shapes from one MIM plangroup 
      to others in same group : 
   # copy_mim -type <placement | blockage> <MIM plangroup to be 
      copied from>
  
   ## To flip the placement of MIM plangroups :
   #  flip_mim -direction <X | Y> <MIM plangroups to be flipped>

*  A feedthrough control is now added in routeability_on_plangroups_dp.tcl
   and pin_assignment_budgeting_dp.tcl when you select MIM for the Design Style 
   option in RMgen.
   
   The script now allows feedthroughs on non-multiply-instantiated-module 
   plan groups by using the following command:
   
   set_fp_pin_constraints -allow_feedthroughs on -keep_buses_together on \
      [remove_from_collection [get_plan_groups] \
      [get_plan_groups $ICC_MIM_INSTANCE_LIST]]

*  The optimize_dft -plan_groups command is not supported if you select ODL for the 
   Flow Style option in RMgen.

*  A new option, Zroute, has been added in RMgen.

   This option allows you to choose between Zroute or the classic router. 
   To generate only Zroute scripts, select TRUE. To generate only classic router
   scripts, select FALSE.

   As a result, the ICC_DP_USE_ZROUTE variable is no longer needed and has been 
   removed.

This release also provides enhancements in the Lynx-compatible reference methodology 
flow. For information about these enhancements, see the file named 
Release_Notes.LynxCompatible-RM.txt.


F-2011.09-SP4
=============

This section describes new features, changes, and enhancements in the 
IC Compiler Hierarchical Reference Methodology version F-2011.09-SP4.

*  In prepare_block_dp.tcl, the write_floorplan command options used to write out 
   a floorplan file that the Design Compiler topographical technology can read 
   have been updated:

   write_floorplan -create_terminal -create_bound -row -track -preroute \
       -placement {io terminal hard_macro soft_macro} ${block}.DCT.fp

   The -track option and the terminal argument have been added.


F-2011.09-SP2
=============

This section describes new features, changes, and enhancements in the 
IC Compiler Hierarchical Reference Methodology version F-2011.09-SP2.

*  The CUSTOM_LOAD_ASCII_UPF_SCRIPT_LIST variable and its associated commands 
   have been removed from icc_setup.tcl and init_design_icc.tcl.

*  The ICC_SKIP_IN_BLOCK_IMPLEMENTATION variable has been renamed 
   ICC_SKIPPED_IN_BLOCK_IMPLEMENTATION in icc_setup.tcl, init_design_icc.tcl, 
   and prepare_block_dp.tcl.

*  The clock tree planning section has been removed from 
   pin_assignment_budgeting_dp.tcl.

   The ICC_DP_CTP and ICC_DP_CTP_ANCHOR_CEL variables have been removed from 
   icc_setup.tcl.

   If you need references for the clock tree planning feature, see previous 
   releases of the IC Compiler Hierarchical Reference Methodology or contact 
   your Synopsys representative.

*  The hierarchical on-demand loading flow has been updated.

   The -effort option setting for the second create_fp_placement command in 
   create_plangroups_dp.tcl has been changed from high to low.

   Also, the following exploration global route command has been added after 
   placement to check full-chip routeability before on-demand netlist creation:

   route_zrt_global -exploration true -congestion_map_only true 

*  The power network synthesis flow has been updated.

   The classic power network synthesis content has been replaced with template-based 
   power network synthesis content in routeability_on_plangroups_dp.tcl. To proceed, 
   you must specify a valid customized script using the $CUSTOM_ICC_DP_PNS_SCRIPT variable.
   For more details, see the descriptions and examples in the template-based power 
   network synthesis section.

   The prefixes of the following variables have been renamed from PNS to PNA 
   because they now apply only to power network analysis:

   o  PNS_TLUPLUS_MAX_FILE and PNS_TLUPLUS_MIN_FILE have been renamed to 
      PNA_TLUPLUS_MAX_FILE and PNA_TLUPLUS_MIN_FILE.

   o  PNS_EXTRACTION_TEMPERATURE and PNS_EXTRACTION_CORNER have been renamed to 
      PNA_EXTRACTION_TEMPERATURE and PNA_EXTRACTION_CORNER.

*  Problems have been resolved in the section of init_design_icc.tcl that reads 
   the full-chip SCANDEF file, ICC_IN_FULL_CHIP_SCANDEF_FILE, for DFT-aware 
   hierarchical design planning.

This release also provides enhancements in the Lynx-compatible reference methodology 
flow. For information about these enhancements, see the file named 
Release_Notes.LynxCompatible-RM.txt.


F-2011.09
=========

The following sections describe new features, changes, and enhancements in the 
IC Compiler Hierarchical Reference Methodology version F-2011.09.

Black Box Flow Update
---------------------

The import_fp_black_boxes command in init_design_icc.tcl has been moved ahead of 
the uniquify_fp_mw_cel command. Previously, the import_fp_black_boxes command 
followed the uniquify_fp_mw_cel command.


Hierarchical On-Demand Loading Multicorner-Multimode Flow Update
----------------------------------------------------------------

A new variable, $ICC_DP_MCMM_SCENARIOS_FILE, has been added and set by default 
to $ICC_MCMM_SCENARIOS_FILE. For hierarchical design planning, you can set this 
variable to specify a subset of scenarios to be used for design planning tasks 
after on-demand netlist creation but before budgeting. The complete scenario 
definitions from $ICC_MCMM_SCENARIOS_FILE are reapplied to the top-level on-demand 
netlist before budgeting.

The following files have been updated:

*  In icc_setup.tcl, a new variable has been added:

   set ICC_DP_MCMM_SCENARIOS_FILE $ICC_MCMM_SCENARIOS_FILE  

      ;# a file that defines a subset of scenarios; 
         default is to be same as $ICC_MCMM_SCENARIOS_FILE;
      ;# $ICC_MCMM_SCENARIOS_FILE is the file that defines your complete set of 
         scenarios which should be used during ODN creation in create_odl_dp step;
      ;# $ICC_DP_MCMM_SCENARIOS_FILE allows you to use only subset of scenarios 
         after ODN creation for design planning tasks up to but not including 
         budgeting then before budgeting in pin_assignment_budgeting_dp step, 
         $ICC_MCMM_SCENARIOS_FILE will be restored
      
*  In routeability_on_plangroups_dp.tcl, the source -echo $ICC_MCMM_SCENARIOS_FILE 
   command has been replaced with the source -echo $ICC_DP_MCMM_SCENARIOS_FILE 
   command.

*  In pin_assignment_budgeting_dp.tcl, the following commands have been added 
   before the allocate_fp_budget command:

   remove_scenario -all
   source -echo $ICC_MCMM_SCENARIOS_FILE


Pin Assignment and Routing Updates
----------------------------------

*  If $ICC_DP_USE_ZROUTE is set to TRUE in routeability_on_plangroups_dp.tcl, 
   the exploration effort is now used with the route_zrt_global command instead 
   of the minimum effort used in previous versions.

   o  The set_route_zrt_global_options -effort minimum command has been removed.
   
   o  The -exploration true option has been added to the 
      route_zrt_global -congestion_map_only true command.

*  A new option has been added in a comment when feedthrough is enabled:

   ## If -allow_feedthroughs on is enabled :
   #  - You can use the -feedthrough_map_file option to specify a feedthrough map 
   #    input file
   #  - You can use report_fp_feedthroughs command to report feedthroughs

*  The check_fp_pin_assignment and check_fp_pin_alignment commands have been added 
   after the place_fp_pins command in pin_assignment_budgeting_dp.tcl because they 
   now support plan group pins. Previously, these commands were in comments, as
   optional steps, in commit_dp.tcl.


Lynx Compatibility
------------------

This release provides enhancements in the Lynx-compatible reference methodology 
flow. For information about these enhancements, see the file named 
Release_Notes.LynxCompatible-RM.txt.


E-2010.12-SP4
=============

This section describe new features, changes, and enhancements in the IC Compiler 
Hierarchical Reference Methodology version E-2010.12-SP4.

*  In rm_icc_dp_scripts/routeability_on_plangroups_dp.tcl, the derive_pg_connection
   command has been added for the IEEE 1801 configuration before the 
   "derive_pg_connection -verbose -tie" command.
   
   IEEE 1801 is also known as Unified Power Format (UPF).

*  The on-demand loading flow has been updated since the E-2010.12-SP2 release.

   Note that changes have been made to both the flow and the file names.
 
   To enable the on-demand loading flow in RMgen, select ODL for the Flow Style 
   option in the Hierarchical Design Planning section. The UPF configuration is 
   not supported in the on-demand loading flow. If you select ODL for the 
   Flow Style option, do not select UPF for the Multivoltage or Multisupply
   option.

   Makefile_hier and the hierarchical design planning flow scripts have been 
   updated to support the on-demand loading flow.

   o  The original init_design_icc step has been split into two steps:
      init_design_odl and routeability_on_plangroups_dp.

   o  The flow now starts with the init_design_odl, create_plangroups_dp, 
      create_odl_dp, and routeability_on_plangroups_dp steps. 

      -- The init_design_odl step retains the design reading and floorplanning 
         portion of the original init_design_icc.

      -- The create_plangroups_dp step is the same.

      -- The create_odl_dp step performs on-demand netlist creation.

      -- The routeability_on_plangroups_dp step retains the constraint loading 
         content, such as MCMM and design constraints from the original 
         init_design_icc step, plus the existing content from the original 
         routeability_on_plangroups_dp step.	 

      The other steps are not changed.

   The following new scripts have been added:

   o  The script named rm_icc_dp_scripts/init_design_odl.tcl performs the 
      init_design_odl step.

   o  The script named rm_icc_dp_scripts/create_odl_dp.tcl performs the 
      create_odl_dp step. 

   The following new variables have been added to icc_setup.tcl:

   o  ICC_FLOORPLAN_ODL_CEL specifies the starting CEL view for init_design_odl.tcl. 

   o  ICC_DP_CREATE_ODL_CEL specifies the starting CEL view for create_odl_dp.tcl.

   All of these changes are automatic. You can start using the on-demand loading 
   flow with the scripts you download from RMgen without making any changes. 

   For large designs, consider using a two-step approach to reduce runtime. The file 
   named odl_two_step_approach_example contains an example of a script that performs 
   on-demand loading by using this two-step approach.

*  The On-demand loading flow now supports the set_host_options command during the 
   create_odl_dp step.

   New variables have been added that allow you to control the set_host_options 
   command:

   set ICC_DP_ODL_HOST_OPTION_POOL_OPTION  ""   ;# lsf | grd; this controls the 
                                                  -pool option for set_host_options"

   set ICC_DP_ODL_HOST_OPTION_SUBMIT_OPTIONS {} ;# controls the value of 
                                                  -submit_option option for 
                                                  set_host_options

   If both options are specified, the -host_options option is used for the  
   create_on_demand_netlist command.

*  If you enable both the multicorner-multimode flow and the on-demand loading flow 
   in RMgen, specify the variable $ICC_DP_ODL_MCMM_MAP_FILE with a text file that 
   contains the mapping between the scenario and the Synopsys Design Constraint 
   (SDC) file variables.

   By default, the create_on_demand_netlist command in create_odl_dp.tcl uses the 
   odl_mcmm_map_file file. The values have been predefined and the SDC file 
   variables correspond to the variables used in the mcmm.scenarios.example file. 
   You do not have to edit odl_mcmm_map_file unless you add new scenarios in 
   mcmm.scenarios.example.  

   The create_on_demand_netlist command also uses the mcmm.scenarios.example 
   file. You must edit mcmm.scenarios.example the same way you edit it for any 
   multicorner-multimode design.

*  If you enable both the multicorner-multimode flow and the on-demand loading flow 
   in RMgen, you must specify a valid TLUPlus file by using $PNS_TLUPLUS_MAX_FILE 
   or $PNS_TLUPLUS_MIN_FILE.

   Power network synthesis and analysis requires TLUPlus information to work 
   properly. However, the $ICC_MCMM_SCENARIOS_FILE file, which contains TLUPlus 
   information, is not sourced until after power network synthesis and analysis, 
   
   You can use the following variables to specify TLUPlus files for power network 
   synthesis and analysis: 

   set PNS_TLUPLUS_MAX_FILE  ""		;# String; for Hierarchical ODL MCMM flow, 
   					   it is required to specify a valid 
   					   $PNS_TLUPLUS_MAX_FILE

   set PNS_TLUPLUS_MIN_FILE  ""		;# or $PNS_TLUPLUS_MIN_FILE for PNS/PNA or 
   					   it will fail.

*  The following optional variables have been added to control the wire extraction 
   temperature and parasitic corner for power network synthesis and analysis:
  
   set PNS_EXTRACTION_TEMPERATURE  ""	;# Float; set the wire extraction 
   					   temperature for PNS/PNA. Optional.

   set PNS_EXTRACTION_CORNER       ""	;# min|max; set the parasitic corner 
   					   for RC extraction for PNS/PNA. Optional.

This release also provides enhancements in the Lynx-Compatible reference 
methodology flow. For information about these enhancements, see the 
file named Release_Notes.LynxCompatible-RM.txt.


E-2010.12-SP2
=============

This section describes new features, changes, and enhancements in the IC Compiler 
Reference Methodology version E-2010.12-SP2.

*  The pin cutting flow has been updated.

   The analyze_fp_routing command has been replaced by the place_fp_pin command. 
   Previously, the scripts contained the following commands:
   
   o  analyze_fp_routing -finalize plan_groups
   o  save_mw_cel -as ${ICC_DP_PIN_ASSIGNMENT_BUDGETING_CEL}_pincut

   Now, the scripts contain the following commands:
   
   o  place_fp_pins -use_existing_routing [get_plan_groups *]
   o  save_mw_cel -as ${ICC_DP_PIN_ASSIGNMENT_BUDGETING_CEL}_place_fp_pins

*  The exploration flow has been removed.

   The following scripts have been updated:

   o  create_plangroups_dp.tcl
   o  routeability_on_plangroups_dp.tcl
   o  pin_assignment_budgeting_dp.tcl 

*  The route_zrt_global -exploration command has been set as the default.

   The following scripts have been updated:

   o  routeability_on_plangroups_dp.tcl
   o  pin_assignment_budgeting_dp.tcl

   The "set_route_zrt_global_options -effort low" command has been removed from the
   pin_assignment_budgeting_dp.tcl file.

*  The on-demand loading flow has been added.

   To enable the on-demand loading flow in RMgen, set the Flow Style option to ODL 
   in the Hierarchical Design Planning section. The UPF configuration is not
   supported in the on-demand loading flow. If you set the Flow Style option to ODL
   in RMgen, do not select the UPF setting for the Multivoltage or Multisupply
   option.
   
   Makefile_hier and the hierarchical design planning flow scripts have been updated 
   to support the on-demand loading flow.

   o  The original init_design_icc step has been split into two steps, 
      init_design_odl_1 and init_design_odl_2, and these steps have been updated 
      with create_on_demand_netlist commands.

   o  The flow now starts with the init_design_odl_1, create_plangroups_dp, 
      init_design_odl_2, and routeability_on_plangroups_dp steps. 
      
      Previously, it started with the init_design_icc, create_plangroups_dp, 
      and routeability_on_plangroups_dp steps, 
      
      The rest of the steps are the same.

   Two new scripts have been added:

   o  The script in rm_icc_dp_scripts/init_design_odl_1.tcl performs the 
      init_design_odl_1 step.

   o  The script in rm_icc_dp_scripts/init_design_odl_2.tcl performs the 
      init_design_odl_2 step. 

   Two existing scripts have been updated:

   o  The script in create_plangroups_dp.tcl now starts with ICC_ODL_1_CEL from the 
      init_design_odl_1 step.
      
      Previously, it started with ICC_FLOORPLAN_CEL in the default flow.

   o  The script in routeability_on_plangroups_dp.tcl now starts with ICC_ODL_2_CEL 
      from the init_design_odl_2 step.
      
      Previously, it started with ICC_DP_CREATE_PLANGROUPS_CEL in the default flow.

   Two new variables have been added to icc_setup.tcl:

   o  ICC_ODL_1_CEL specifies the starting CEL view for init_design_odl_1.tcl. 
   o  ICC_ODL_2_CEL specifies the starting CEL view for init_design_odl_2.tcl.

   All these changes are automatic. You can start using the on-demand loading 
   flow with the scripts you download from RMgen. 

   In addition, the following two new script files are included if you set the 
   Multicorner Multimode (MCMM) option to TRUE in RMgen:

   o  The file named odl_mcmm_map_file is a text file with mapping between the 
      scenario and Synopsys Design Constraint (SDC) file variables.

      The create_on_demand_netlist command in init_design_odl_2.tcl uses 
      odl_mcmm_map_file. The values have been predefined, and the SDC file variables 
      correspond to the variables are used in the mcmm.scenarios.example file. You do 
      not have to edit odl_mcmm_map_file unless you add new scenarios in 
      mcmm.scenarios.example.  

      The create_on_demand_netlist command also uses the mcmm.scenarios.example 
      file. You need to edit mcmm.scenarios.example the same way edit any 
      multicorner-multimode design.

   o  The file named odl_two_step_approach_example contains an example of a script 
      that performs on-demand loading in the two-step approach.

*  The first create_fp_placement command has been updated.

   The -effort low and -no_legalize options have been removed.

This release also provides enhancements in the Lynx-Compatible reference 
methodology flow. For information about these enhancements, see the 
file named Release_Notes.LynxCompatible-RM.txt.


E-2010.12
=========

This section describes new features, changes, and enhancements in the IC Compiler 
Hierarchical Reference Methodology version E-2010.12.

*  In prepare_blocks_dp.tcl, the following command has been replaced:

      report_voltage_area -all \
         > ${REPORTS_DIR_DP_PREPARE_BLOCK}/${block}.icc_dp.voltage_area.rpt

   The command that has replaced it is

      write_floorplan -no_bound -no_create_boundary \
         -no_placement_blockage \
         -no_plan_group -no_route_guide ${block}.create_voltage_area.tcl

   This command produces a tool command language (Tcl) script to recreate voltage 
   areas for use with Design Compiler in topographical mode.

*  In prepare_blocks_dp.tcl, the create_ilm command has been disabled for the 
   black box flow.

*  In create_va_dp.tcl, an additional option, -cycle_color, has been added to the 
   create_voltage_area command such as:
   
      if {$PD1 != ""} {create_voltage_area -guard_band_x 2 -guard_band_y 2 \
         -power_domain $PD1 -target_utilization 0.7 -cycle_color

*  In create_va_dp.tcl, additions have been made to remove and set the 
   dont_touch_placement variable before and after placement.
   
   The following code has been added before the create_fp_placement command:

       if {[all_macro_cells] != ""} {
           if {$ICC_DP_FIX_MACRO_LIST eq ""} {
               remove_dont_touch_placement [all_macro_cells]
           } elseif {$ICC_DP_FIX_MACRO_LIST eq "skip"} {
               echo "remove_dont_touch_placement for macros is skipped"
           } else {
               remove_dont_touch_placement [all_macro_cells]
               set_dont_touch_placement $ICC_DP_FIX_MACRO_LIST}
           }

   The following code has been added after the create_fp_placement command:

       if {[all_macro_cells] != "" } {
           set_dont_touch_placement [all_macro_cells]
       }

This release also provides enhancements in the Lynx-Compatible reference 
methodology flow. For information about these enhancements, see the 
file named Release_Notes.LynxCompatible-RM.txt.


D-2010.03-SP4
=============

This section describes new features, changes, and enhancements in the IC Compiler 
Hierarchical Reference Methodology version D-2010.03-SP4.

*  In create_plangroups_dp.tcl and create_va_dp.tcl, the following commands are 
   obsolete and have been removed:

   set_fp_placement_strategy \
       -voltage_area_interface_net_weight $ICC_DP_PLACEMENT_VA_NET_WEIGHT 

   set_fp_placement_strategy -voltage_area_net_weight_LS_only on

   These commands have been replaced with the following commented command. Please 
   uncomment the command to use it.

   # set_fp_placement_strategy -honor_mv_cells on

   In addition, the variable $ICC_DP_PLACEMENT_VA_NET_WEIGHT has been removed from 
   icc_setup.tcl.


D-2010.03-SP3
=============

This section describes new features, changes, and enhancements in the IC Compiler 
Hierarchical Reference Methodology version D-2010.03-SP3.

A new exploration flow configuration has been added for the hierarchical design 
planning flow.

To generate the scripts for a particular hierarchical design planning flow style, 
select the appropriate value for the Flow Style option in RMgen: 
   
*  DEFAULT (virtual flat) 
*  EXPLORATION.

RMgen generates the create_plangroups_dp.tcl, routeability_on_plangroups_dp.tcl,
and pin_assignment_budgeting_dp.tcl script files based on the flow style that
you select. 

If you select EXPLORATION, RMgen configures the following scripts:

*  In create_plangroups_dp.tcl, the "create_fp_placement -exploration" command 
   replaces 

   o  The "create_fp_placement -effort low -no_legalize" command during shaping
   o  The "create_fp_placement -effort high" command during final placement

*  In routeability_on_plangroups_dp.tcl,

   o  The "route_zrt_global -exploration true" command replaces the
      "route_zrt_global -congestion_map_only true" command.

   o  The "set_ahfs_options -incremental true" and "set fpopt_no_legalize true" 
      commands are applied before running the "optimize_fp_timing -hfs_only" 
      command.

*  In pin_assignment_budgeting_dp.tcl,

   o  The "route_zrt_global -exploration true" command replaces the "route_zrt_global" 
      command.

   o  The "optimize_fp_timing -feedthrough_buffering_only" and "virtual_ipo" 
      commands replace the "optimize_fp_timing" command. 

   o  The "allocate_fp_budgets -exploration" command replaces the 
      "allocate_fp_budgets" command.


D-2010.03-SP2
=============

This section describes new features, changes, and enhancements in the IC Compiler 
Hierarchical Reference Methodology version D-2010.03-SP2.

*  Multicore support has been added for create_fp_placement by adding the 
   "set_host_options -max_cores $ICC_NUM_CORES" command to create_plangroups_dp.tcl.

   In addition, the "set_host_options -max_cores $ICC_NUM_CORES" command has been 
   removed from pin_assignment_budgeting since common_optimization_settings_icc.tcl, 
   which is sourced at the beginning of the step, already includes this command. 


D-2010.03-SP1
=============

This section describes new features, changes, and enhancements in the IC Compiler 
Hierarchical Reference Methodology version D-2010.03-SP1.

Note: 
   The D-2010.03-SP1 IC Compiler Hierarchical Reference Methodology is 
   compatible with the IC Compiler version D-2010.03-SP1-1.

*  The file feasibility_on_plangroups_dp.tcl has been renamed 
   routeability_on_plangroups_dp.tcl. 
   
   The scripts and Makefile_hier have been updated.

*  The check_fp_rail command has been added as a comment following the 
   synthesize_fp_rail command in routeability_on_plangroups_dp.tcl. 

*  The IC Compiler Hierarchical Reference Methodology does not support the new 
   Physical Guidance option in RMgen.


D-2010.03
=========

This section describes new features, changes, and enhancements in the IC Compiler 
Hierarchical Reference Methodology version D-2010.03.

*  The reference methodology directory structure has been reorganized for all 
   versions of the product reference methodologies.
   
   o  The setup files and makefiles have been moved to a new directory named 
      rm_setup.
   
   o  The scripts directory has been renamed rm_<prod>_scripts, where <prod> is 
      the product identifier: dc, icc, pt, or tmax.
   
   These changes are the same for every product reference methodology.

   Due to the directory structure change, the procedure for running the reference 
   methodology scripts has changed from previous releases. For example, to run the IC Compiler Hierarchical Reference methodology scripts, enter

   % make -f rm_setup/Makefile_hier hier_dp  

   See README.ICC-HRM.txt if you need more details.

*  Placement and shaping has been updated.

   o  Comments regarding "congestion aware shaping" have been added in 
      create_plangroups_dp.tcl.

   o  Comments regarding "auto detection of logical hierarchies other than existing 
      placegroups" have been added in create_plangroups_dp.tcl.

*  The black box flow has been updated.

   To include black box support in the generated scripts, you now select 
   BLACK_BOX for the Design Style option in RMgen.
   Available only when DEFAULT (channeled) is selected for the Floorplan Style option in RMgen.

   In previous versions, black box support was controlled by using the tool 
   command language (Tcl) variable ICC_DP_DESIGN_STYLE in icc_setup.tcl.
   All related scripts have been updated.

   All the ICC_DP_BLACK_BOX* variables are still effective. For more information, 
   see the release notes section for version C-2009.06-SP4.

*  Multiple instantiated modules flow support has been added.

   To include multiple instantiated modules support in the generated scripts, 
   select MIM for the Design Style option in RMgen.
   Available only when DEFAULT (channeled) is selected for the Floorplan Style option in RMgen.

   The following files have been enhanced:
   
   o  init_design_icc.tcl
   
      The "uniquify_fp_mw_cel -store_mim_property" command is used for multiple 
      instantiated modules.

   o  icc_setup.tcl
   
      New variables, ICC_MIM_INSTANCE_LIST and ICC_MIM_MASTER_LIST, have been added 
      to mark multiple instantiated module instances and master instances. 

   o  create_plangroups_dp.tcl
   
      Comments of sample copy_mim commands have been added.

   o  pin_assignment_budgeting_dp.tcl
   
      The select_mim_master_instance command applies to ICC_MIM_MASTER_LIST.

   o  commit_dp.tcl
   
      The report_mim command has been added.

*  The optimiza_fp_timing command usage for in-place optimization has been updated.

   The hierarchical flow contains two in-place optimizations. 

   o  In the updated flow, the first in-place optimization runs with the -hfs_only
      option and the second in-place optimization runs with all defaults.
   
      In previous releases, the first in-place optimization runs with all defaults 
      and second in-place optimization optimizes only feedthrough nets.

   o  For the first in-place optimization, the prefix is now dp_ipo_hfs. 
   
   o  For the second in-place optimization, the prefix is now dp_ipo.

*  New channeled, narrow-channeled, and abutted floorplan style configurations
   have been added.

   To generate the scripts for a particular floorplan style, select the appropriate 
   value for the Floorplan Style option in RMgen: CHANNELED (the default), 
   NARROW-CHANNELED, or ABUTTED.

   The create_plangroups_dp.tcl, feasibility_on_plangroups_dp.tcl and 
   pin_assignment_budgeting_dp.tcl scripts are generated based on the style you select. 
   The selection affects mainly the options used by the shape_fp_blocks,
   set_fp_pin_constriants and optimmize_fp_timing commands.

   o  For default and narrow-channeled styles, an additional option, -channels, is 
      enabled in the shape_fp_blocks command. 

   o  The "set_fp_pin_constraints -allow_feedthroughs" command is optional with the 
      channeled style but is enabled for the other styles.

   o  For narrow-channeled style, an additional option, -reserved_channel_threshold, 
      is enabled in the set_fp_pin_constraints command.    

   o  For the abutted style, an additional option, -no_new_cells_at_top_level, is 
      enabled in the optimize_fp_timing command. 

*  Clock tree planning has been updated.

   o  The "mark_clock_tree -clock_net" command has been added prior to the 
      set_fp_pin_constraints in feasibility_on_plangroups_dp.tcl and the one in
      pin_assignment_budgeting_dp.tcl is removed.

   o  Comments regarding the values used by the set_fp_clock_plan_options options
      have been updated, changing -keep_block_tree from false to true and changing 
      update_clock_latency from true to false.

      Comments have also been added to avoid clock feedthroughs on plan groups. 

      The pin_assignment_budgeting_dp.tcl file has been updated.

*  In feasibility_on_plangroups_dp.tcl, for congestion estimation,
   when ICC_DP_USE_ZROUTE is set to FALSE, the route_fp_proto command is used and
   when ICC_DP_USE_ZROUTE is set to TRUE, the "set_route_zrt_global_options -effort minimum"
   and "route_zrt_global" commands are used.
   
*  The "create_ilm option -keep_parasitics" command has been removed in 
   prepare_blocks_dp.tcl.

*  Design for test (DFT) is no longer an RMgen configuration and has been converted
   to a Tcl variable in icc_setup.tcl. To run the DFT-aware hierarchical flow, set 
   both DFT and ICC_DP_DFT_FLOW to TRUE.

*  The write_def and write_floorplan options have been updated in 
   prepare_blocks_dp.tcl to generate outputs that are compatible with DC Ultra topographical mode.

*  New variables, REPORTS_DIR_*, have been added for step-specific reporting 
   directories.

   If you want to have a specific report directory for each step, use the
   REPORTS_DIR_* variables instead of the REPORTS_DIR variable. By default, 
   the tool writes all the reports to REPORTS_DIR and there is no impact on 
   existing usage.

   The icc_setup.tcl file and all scripts have been updated.
